axios.get('/dimension/valoria/idea/square').then((squareIdea) => {
  eval(squareIdea.data.content);
  let square = $('#' + thingKey);
  square.css({
    minWidth : "450px",
    minHeight : "450px",
    padding : "40px"
  })
  //Create Code Element
  let code = document.createElement('div')
  code.classList.add('code');
  code.id = thingKey + 'codeContainer';
  $(code).css({
    minWidth : "450px",
    minHeight : "450px",
    width : "90%",
    height : "90%",
    display : "flex",
    flexDirection : "column",
    justifyContent : "flex-start",
    alignItems : "center",
    position : "absolute",
    zIndex : "2"
  })
  $('#' + thingKey).append(code);

  //Create Idea Input Container
  let ideaInputContainer = document.createElement('div');
  ideaInputContainer.classList.add("ideaInputContainer");
  $(ideaInputContainer).css({
    height : "10%",
    backgroundColor : "#ffffff",
    width : "100%",
    borderBottom : "2px solid #000000",
    display : "flex",
    justifyContent : "center",
    alignItems : "center"
  })
  $(code).append(ideaInputContainer)

  //Create Idea Input Text
  let ideaInput = document.createElement('div');
  ideaInput.classList.add('ideaInput');
  ideaInput.contentEditable = true;
  $(ideaInput).css({
    color : "black",
    fontSize : "20px",
    fontWeight : "bold",
    textAlign : "center",
    outline : "none"
  })
  ideaInput.textContent = thingContent;
  let kindOfIdea = ideaInput.textContent.toLowerCase();
  $(ideaInputContainer).append(ideaInput)

  //Create Code Editor Element
  let codeEditor = document.createElement('div');
  codeEditor.classList.add('codeEditor');
  codeEditor.id = code.id + "editor";
  $(codeEditor).css({
    width : "100%",
    height : "90%",
    outline: "none"
  })
  codeEditor.tabIndex = 0;
  $(code).append(codeEditor);

  //Create Button Element to Run Code from Editor
  let runCodeBtn = document.createElement('div')
  runCodeBtn.classList.add('runCodeBtn');
  $(runCodeBtn).css({
    width : "100%",
    height : "10%",
    borderTop : "2px solid #000000",
    display : "flex",
    justifyContent : "center",
    alignItems : "center",
    cursor : "pointer",
    backgroundColor : "white"
  })
  let runCodeBtnText = document.createElement('div');
  runCodeBtnText.classList.add('runCodeBtnText');
  runCodeBtnText.textContent = "Run Code";
  $(runCodeBtnText).css({
    textAlign : "center",
    fontSize : "25px",
    fontWeight : "bold",
    color : "#000000"
  })
  $(runCodeBtn).append(runCodeBtnText);
  $(code).append(runCodeBtn);

  //Add Ace to Editor to make all codey
  let editor = ace.edit(codeEditor.id);
  editor.session.setMode("ace/mode/javascript");
  editor.session.setTabSize(2)
  editor.resize();
  axios.get('/dimension/valoria/idea/' + thingContent).then((res) => {
    if(res.data.content){
      editor.setValue(res.data.content);
    }
  })
  //Run Code on Run Code Button Click
  runCodeBtn.onclick = function(){
    let thisCode = editor.getValue();
    if(thingContent == dimension.key){
      axios.post('/dimension/valoria/save', {
        content : thisCode
      })
    }
    axios.post('/dimension/valoria/idea/' + thingContent + '/save', {
      content : thisCode
    }).then((res) => {
      if(res.data.content){
        editor.setValue(res.data.content);
        thingKey = 'prototype-' + thingContent;
        eval(res.data.content);
      }
    })
  }

  //Blur and Focus for Editor
  let editingThisCode = false;
  editor.on("focus", () => {
    editingThisCode = true;
  })
  editor.on("blur", () => {
    editingThisCode = false;
  })

  //Save Code on CMD+S or CTRL+S
  $(window).keydown((e) => {
    if (e.metaKey && e.keyCode == 83 || e.ctrlKey && e.keyCode == 83) {
      e.preventDefault();
      if(editingThisCode){
        if(thingContent == dimension.key){
          axios.post('/dimension/valoria/save', {
            content : editor.getValue()
          })
        }
        axios.post('/dimension/valoria/idea/' + thingContent + '/save', {
          content : editor.getValue()
        })
      }
    }
  });

  //Change Idea on Idea Input Blur
  $(ideaInput).on('blur', (e) => {
    kindOfIdea = ideaInput.textContent.toLowerCase();
    if(kindOfIdea.length > 0 ){
      axios.get('/dimension/valoria/idea/' + kindOfIdea).then((res) => {
        if(res.data){
          if(res.data.err){
            axios.post('/dimension/valoria/idea/new', {
              content : '//Write code for ' + kindOfIdea,
              kind : kindOfIdea
            }).then((res) => {
              editor.setValue(res.data.content);
            })
          }else{
            editor.setValue(res.data.content);
          }
          axios.post('/dimension/valoria/thing/' + thingKey + '/save', {
            content : kindOfIdea
          }).then(() => {
            thingContent = kindOfIdea;
          });
        }
      })
    }
  })

  //Square should only be active when clicking on it
  $(square).on('mousedown', (e) => {
    if(!e.target.className.includes('square')){
      $(square).draggable('disable');
    }else{
      $(square).draggable('enable');
    }
  })

})
