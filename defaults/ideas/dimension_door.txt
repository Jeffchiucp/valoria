window.Dimension_door = class {

  //Dimension Doors need a thingKey and a dimKey
  constructor(thing){
    Object.assign(this, thing);
  }

  build(){
    let thingKey = this.key
    let thisDoorDimKey = this.content.dimKey || 'prototype';

    let squareInstance = new Square(this)
    squareInstance.build();

    let square = $('#' + thingKey);
    $(square).css({
      minWidth : "250px",
      minHeight : "250px"
    })

    //Create Dimension Door Element
    let dimensionDoor = document.createElement('div');
    dimensionDoor.classList.add('dimensionDoor');
    dimensionDoor.tabIndex = 1;
    $(dimensionDoor).css({
      width : "90%",
      height : "90%",
      display : "flex",
      justifyContent : "center",
      alignItems : "center",
      backgroundColor : "#000000",
      cursor : "pointer"
    })
    $(square).append(dimensionDoor);

    //Create Dimension Door Label
    let dimensionDoorLabel = document.createElement('div');
    dimensionDoorLabel.classList.add('dimensionDoorLabel');
    dimensionDoorLabel.textContent = "Join " + thisDoorDimKey + " Dimension";
    $(dimensionDoorLabel).css({
     fontSize : "30px",
     color : "white",
     fontWeight : "bold",
     textAlign : "center"
    })
    $(dimensionDoor).append(dimensionDoorLabel);

    //Join dimension on click
    dimensionDoor.onclick = function(){
      axios.get('/dimension/' + thisDoorDimKey).then((res) => {
        if(!res.data.err){
          //Remove Current Dimension
          $('.' + thisDimensionKey).remove();
          $('#dimension').text(res.data.key);

          window.thisDimensionKey = res.data.key;

          window.dimensionGun = gun.get('dimension').get(thisDimensionKey);

          //Create Dimension Element
          window.thisDimension = document.createElement('div');
          thisDimension.classList.add(thisDimensionKey);
          thisDimension.tabIndex = 1;
          $(thisDimension).css({
            width : "100%",
            height : "100%",
            position : "absolute",
            display : "flex",
            justifyContent : "center",
            alignItems : "center",
            zIndex : 0,
            backgroundColor : "#000000"
          })
          $('body').append(thisDimension);

          window.ideas = {};

          //Load Dimension Data
          axios.get('/dimension/' + thisDimensionKey).then((dimensionRes) => {
            let dimension = dimensionRes.data;
            //Load the use idea
            axios.get('/dimension/' + thisDimensionKey + "/idea/use").then((useRes) => {
              new Function(useRes.data.content)();

              //Use all the default ideas
              dimension.defaultIdeas.forEach((idea) => {
                if(idea != 'start' && idea != 'use'){
                  use(idea);
                }
              })

              //Lets load the things in this dimension
              window.things = {};
              dimensionRes.data.things.forEach((thingKey) => {
                axios.get('/dimension/' + thisDimensionKey + '/thing/' + thingKey).then((thingRes) => {
                  let thingContent;
                  if(thingRes.data.content){
                    thingContent = JSON.parse(thingRes.data.content);
                  }
                  things[thingKey] = new Thing(thingRes.data.kind);
                  things[thingKey].key = thingKey;
                  things[thingKey].creator = thingRes.data.creator;
                  things[thingKey].dimension = thingRes.data.dimension;
                  things[thingKey].content = thingContent;
                  things[thingKey].build();
                })
              })
            })
          })
        }
      })
    }
  }
}
